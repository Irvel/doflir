# Generated from Doflir.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u01e7\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3")
        buf.write("\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3")
        buf.write("\20\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3")
        buf.write("#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3")
        buf.write("&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\5(\u0169\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3")
        buf.write(")\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\5")
        buf.write(")\u0187\n)\3*\3*\7*\u018b\n*\f*\16*\u018e\13*\3*\3*\3")
        buf.write("+\3+\3,\6,\u0195\n,\r,\16,\u0196\3-\6-\u019a\n-\r-\16")
        buf.write("-\u019b\3-\3-\7-\u01a0\n-\f-\16-\u01a3\13-\3-\3-\6-\u01a7")
        buf.write("\n-\r-\16-\u01a8\5-\u01ab\n-\3.\3.\5.\u01af\n.\3/\3/\3")
        buf.write("/\3/\3/\3/\3/\3/\3/\5/\u01ba\n/\3\60\3\60\7\60\u01be\n")
        buf.write("\60\f\60\16\60\u01c1\13\60\3\61\3\61\3\61\3\61\7\61\u01c7")
        buf.write("\n\61\f\61\16\61\u01ca\13\61\3\61\3\61\3\61\3\61\3\61")
        buf.write("\3\62\3\62\7\62\u01d3\n\62\f\62\16\62\u01d6\13\62\3\62")
        buf.write("\3\62\3\63\5\63\u01db\n\63\3\63\3\63\5\63\u01df\n\63\3")
        buf.write("\64\6\64\u01e2\n\64\r\64\16\64\u01e3\3\64\3\64\3\u01c8")
        buf.write("\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U\2W,Y-[.]/_\60a\61c\62e\63g\64\3\2\b\6\2\f\f")
        buf.write("\17\17$$^^\3\2\62;\4\2C\\c|\6\2\62;C\\aac|\4\2\f\f\17")
        buf.write("\17\5\2\13\f\16\17\"\"\2\u0205\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5u\3\2\2\2\7w\3\2")
        buf.write("\2\2\ty\3\2\2\2\13{\3\2\2\2\r}\3\2\2\2\17\u0080\3\2\2")
        buf.write("\2\21\u0087\3\2\2\2\23\u0089\3\2\2\2\25\u008b\3\2\2\2")
        buf.write("\27\u008d\3\2\2\2\31\u0094\3\2\2\2\33\u0096\3\2\2\2\35")
        buf.write("\u0098\3\2\2\2\37\u009a\3\2\2\2!\u009c\3\2\2\2#\u009e")
        buf.write("\3\2\2\2%\u00a2\3\2\2\2\'\u00a4\3\2\2\2)\u00a7\3\2\2\2")
        buf.write("+\u00a9\3\2\2\2-\u00ab\3\2\2\2/\u00ae\3\2\2\2\61\u00b0")
        buf.write("\3\2\2\2\63\u00b3\3\2\2\2\65\u00b5\3\2\2\2\67\u00b8\3")
        buf.write("\2\2\29\u00bb\3\2\2\2;\u00be\3\2\2\2=\u00c2\3\2\2\2?\u00c5")
        buf.write("\3\2\2\2A\u00c8\3\2\2\2C\u00cd\3\2\2\2E\u00d3\3\2\2\2")
        buf.write("G\u00de\3\2\2\2I\u00e9\3\2\2\2K\u00f6\3\2\2\2M\u00fc\3")
        buf.write("\2\2\2O\u0168\3\2\2\2Q\u0186\3\2\2\2S\u0188\3\2\2\2U\u0191")
        buf.write("\3\2\2\2W\u0194\3\2\2\2Y\u01aa\3\2\2\2[\u01ae\3\2\2\2")
        buf.write("]\u01b9\3\2\2\2_\u01bb\3\2\2\2a\u01c2\3\2\2\2c\u01d0\3")
        buf.write("\2\2\2e\u01de\3\2\2\2g\u01e1\3\2\2\2ij\7f\2\2jk\7g\2\2")
        buf.write("kl\7h\2\2lm\7k\2\2mn\7p\2\2no\7g\2\2op\7\"\2\2pq\7o\2")
        buf.write("\2qr\7c\2\2rs\7k\2\2st\7p\2\2t\4\3\2\2\2uv\7}\2\2v\6\3")
        buf.write("\2\2\2wx\7\177\2\2x\b\3\2\2\2yz\7?\2\2z\n\3\2\2\2{|\7")
        buf.write("=\2\2|\f\3\2\2\2}~\7/\2\2~\177\7@\2\2\177\16\3\2\2\2\u0080")
        buf.write("\u0081\7f\2\2\u0081\u0082\7g\2\2\u0082\u0083\7h\2\2\u0083")
        buf.write("\u0084\7k\2\2\u0084\u0085\7p\2\2\u0085\u0086\7g\2\2\u0086")
        buf.write("\20\3\2\2\2\u0087\u0088\7*\2\2\u0088\22\3\2\2\2\u0089")
        buf.write("\u008a\7+\2\2\u008a\24\3\2\2\2\u008b\u008c\7.\2\2\u008c")
        buf.write("\26\3\2\2\2\u008d\u008e\7t\2\2\u008e\u008f\7g\2\2\u008f")
        buf.write("\u0090\7v\2\2\u0090\u0091\7w\2\2\u0091\u0092\7t\2\2\u0092")
        buf.write("\u0093\7p\2\2\u0093\30\3\2\2\2\u0094\u0095\7]\2\2\u0095")
        buf.write("\32\3\2\2\2\u0096\u0097\7_\2\2\u0097\34\3\2\2\2\u0098")
        buf.write("\u0099\7`\2\2\u0099\36\3\2\2\2\u009a\u009b\7/\2\2\u009b")
        buf.write(" \3\2\2\2\u009c\u009d\7-\2\2\u009d\"\3\2\2\2\u009e\u009f")
        buf.write("\7p\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1\7v\2\2\u00a1$\3")
        buf.write("\2\2\2\u00a2\u00a3\7B\2\2\u00a3&\3\2\2\2\u00a4\u00a5\7")
        buf.write("\60\2\2\u00a5\u00a6\7\60\2\2\u00a6(\3\2\2\2\u00a7\u00a8")
        buf.write("\7,\2\2\u00a8*\3\2\2\2\u00a9\u00aa\7\61\2\2\u00aa,\3\2")
        buf.write("\2\2\u00ab\u00ac\7\61\2\2\u00ac\u00ad\7\61\2\2\u00ad.")
        buf.write("\3\2\2\2\u00ae\u00af\7@\2\2\u00af\60\3\2\2\2\u00b0\u00b1")
        buf.write("\7@\2\2\u00b1\u00b2\7?\2\2\u00b2\62\3\2\2\2\u00b3\u00b4")
        buf.write("\7>\2\2\u00b4\64\3\2\2\2\u00b5\u00b6\7>\2\2\u00b6\u00b7")
        buf.write("\7?\2\2\u00b7\66\3\2\2\2\u00b8\u00b9\7?\2\2\u00b9\u00ba")
        buf.write("\7?\2\2\u00ba8\3\2\2\2\u00bb\u00bc\7#\2\2\u00bc\u00bd")
        buf.write("\7?\2\2\u00bd:\3\2\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0")
        buf.write("\7p\2\2\u00c0\u00c1\7f\2\2\u00c1<\3\2\2\2\u00c2\u00c3")
        buf.write("\7q\2\2\u00c3\u00c4\7t\2\2\u00c4>\3\2\2\2\u00c5\u00c6")
        buf.write("\7k\2\2\u00c6\u00c7\7h\2\2\u00c7@\3\2\2\2\u00c8\u00c9")
        buf.write("\7g\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc")
        buf.write("\7g\2\2\u00ccB\3\2\2\2\u00cd\u00ce\7y\2\2\u00ce\u00cf")
        buf.write("\7j\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2")
        buf.write("\7g\2\2\u00d2D\3\2\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5")
        buf.write("\7g\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7\7f\2\2\u00d7\u00d8")
        buf.write("\7a\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7c\2\2\u00da\u00db")
        buf.write("\7d\2\2\u00db\u00dc\7n\2\2\u00dc\u00dd\7g\2\2\u00ddF\3")
        buf.write("\2\2\2\u00de\u00df\7t\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1")
        buf.write("\7c\2\2\u00e1\u00e2\7f\2\2\u00e2\u00e3\7a\2\2\u00e3\u00e4")
        buf.write("\7c\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7")
        buf.write("\7c\2\2\u00e7\u00e8\7{\2\2\u00e8H\3\2\2\2\u00e9\u00ea")
        buf.write("\7t\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed")
        buf.write("\7f\2\2\u00ed\u00ee\7a\2\2\u00ee\u00ef\7e\2\2\u00ef\u00f0")
        buf.write("\7q\2\2\u00f0\u00f1\7p\2\2\u00f1\u00f2\7u\2\2\u00f2\u00f3")
        buf.write("\7q\2\2\u00f3\u00f4\7n\2\2\u00f4\u00f5\7g\2\2\u00f5J\3")
        buf.write("\2\2\2\u00f6\u00f7\7r\2\2\u00f7\u00f8\7t\2\2\u00f8\u00f9")
        buf.write("\7k\2\2\u00f9\u00fa\7p\2\2\u00fa\u00fb\7v\2\2\u00fbL\3")
        buf.write("\2\2\2\u00fc\u00fd\7r\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff")
        buf.write("\7k\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7v\2\2\u0101\u0102")
        buf.write("\7n\2\2\u0102\u0103\7p\2\2\u0103N\3\2\2\2\u0104\u0105")
        buf.write("\7h\2\2\u0105\u0106\7a\2\2\u0106\u0107\7u\2\2\u0107\u0108")
        buf.write("\7w\2\2\u0108\u0169\7o\2\2\u0109\u010a\7h\2\2\u010a\u010b")
        buf.write("\7a\2\2\u010b\u010c\7o\2\2\u010c\u010d\7g\2\2\u010d\u010e")
        buf.write("\7c\2\2\u010e\u0169\7p\2\2\u010f\u0110\7h\2\2\u0110\u0111")
        buf.write("\7a\2\2\u0111\u0112\7x\2\2\u0112\u0113\7c\2\2\u0113\u0169")
        buf.write("\7t\2\2\u0114\u0115\7h\2\2\u0115\u0116\7a\2\2\u0116\u0117")
        buf.write("\7o\2\2\u0117\u0118\7k\2\2\u0118\u0169\7p\2\2\u0119\u011a")
        buf.write("\7h\2\2\u011a\u011b\7a\2\2\u011b\u011c\7o\2\2\u011c\u011d")
        buf.write("\7c\2\2\u011d\u0169\7z\2\2\u011e\u011f\7h\2\2\u011f\u0120")
        buf.write("\7a\2\2\u0120\u0121\7u\2\2\u0121\u0122\7v\2\2\u0122\u0169")
        buf.write("\7f\2\2\u0123\u0124\7h\2\2\u0124\u0125\7a\2\2\u0125\u0126")
        buf.write("\7p\2\2\u0126\u0127\7q\2\2\u0127\u0128\7t\2\2\u0128\u0129")
        buf.write("\7o\2\2\u0129\u012a\7c\2\2\u012a\u012b\7n\2\2\u012b\u012c")
        buf.write("\7k\2\2\u012c\u012d\7|\2\2\u012d\u0169\7g\2\2\u012e\u012f")
        buf.write("\7h\2\2\u012f\u0130\7a\2\2\u0130\u0131\7u\2\2\u0131\u0132")
        buf.write("\7s\2\2\u0132\u0133\7w\2\2\u0133\u0134\7c\2\2\u0134\u0135")
        buf.write("\7t\2\2\u0135\u0169\7g\2\2\u0136\u0137\7h\2\2\u0137\u0138")
        buf.write("\7a\2\2\u0138\u0139\7e\2\2\u0139\u013a\7w\2\2\u013a\u013b")
        buf.write("\7d\2\2\u013b\u0169\7g\2\2\u013c\u013d\7h\2\2\u013d\u013e")
        buf.write("\7a\2\2\u013e\u013f\7u\2\2\u013f\u0140\7v\2\2\u0140\u0141")
        buf.write("\7t\2\2\u0141\u0142\7k\2\2\u0142\u0169\7r\2\2\u0143\u0144")
        buf.write("\7h\2\2\u0144\u0145\7a\2\2\u0145\u0146\7n\2\2\u0146\u0147")
        buf.write("\7q\2\2\u0147\u0148\7y\2\2\u0148\u0149\7g\2\2\u0149\u014a")
        buf.write("\7t\2\2\u014a\u014b\7e\2\2\u014b\u014c\7c\2\2\u014c\u014d")
        buf.write("\7u\2\2\u014d\u0169\7g\2\2\u014e\u014f\7h\2\2\u014f\u0150")
        buf.write("\7a\2\2\u0150\u0151\7w\2\2\u0151\u0152\7r\2\2\u0152\u0153")
        buf.write("\7r\2\2\u0153\u0154\7g\2\2\u0154\u0155\7t\2\2\u0155\u0156")
        buf.write("\7e\2\2\u0156\u0157\7c\2\2\u0157\u0158\7u\2\2\u0158\u0169")
        buf.write("\7g\2\2\u0159\u015a\7h\2\2\u015a\u015b\7a\2\2\u015b\u015c")
        buf.write("\7u\2\2\u015c\u015d\7q\2\2\u015d\u015e\7t\2\2\u015e\u0169")
        buf.write("\7v\2\2\u015f\u0160\7h\2\2\u0160\u0161\7a\2\2\u0161\u0162")
        buf.write("\7t\2\2\u0162\u0163\7g\2\2\u0163\u0164\7x\2\2\u0164\u0165")
        buf.write("\7g\2\2\u0165\u0166\7t\2\2\u0166\u0167\7u\2\2\u0167\u0169")
        buf.write("\7g\2\2\u0168\u0104\3\2\2\2\u0168\u0109\3\2\2\2\u0168")
        buf.write("\u010f\3\2\2\2\u0168\u0114\3\2\2\2\u0168\u0119\3\2\2\2")
        buf.write("\u0168\u011e\3\2\2\2\u0168\u0123\3\2\2\2\u0168\u012e\3")
        buf.write("\2\2\2\u0168\u0136\3\2\2\2\u0168\u013c\3\2\2\2\u0168\u0143")
        buf.write("\3\2\2\2\u0168\u014e\3\2\2\2\u0168\u0159\3\2\2\2\u0168")
        buf.write("\u015f\3\2\2\2\u0169P\3\2\2\2\u016a\u016b\7k\2\2\u016b")
        buf.write("\u016c\7p\2\2\u016c\u0187\7v\2\2\u016d\u016e\7h\2\2\u016e")
        buf.write("\u016f\7n\2\2\u016f\u0170\7q\2\2\u0170\u0171\7c\2\2\u0171")
        buf.write("\u0187\7v\2\2\u0172\u0173\7d\2\2\u0173\u0174\7q\2\2\u0174")
        buf.write("\u0175\7q\2\2\u0175\u0187\7n\2\2\u0176\u0177\7u\2\2\u0177")
        buf.write("\u0178\7v\2\2\u0178\u0179\7t\2\2\u0179\u017a\7k\2\2\u017a")
        buf.write("\u017b\7p\2\2\u017b\u0187\7i\2\2\u017c\u017d\7x\2\2\u017d")
        buf.write("\u017e\7g\2\2\u017e\u017f\7e\2\2\u017f\u0180\7v\2\2\u0180")
        buf.write("\u0181\7q\2\2\u0181\u0187\7t\2\2\u0182\u0183\7x\2\2\u0183")
        buf.write("\u0184\7q\2\2\u0184\u0185\7k\2\2\u0185\u0187\7f\2\2\u0186")
        buf.write("\u016a\3\2\2\2\u0186\u016d\3\2\2\2\u0186\u0172\3\2\2\2")
        buf.write("\u0186\u0176\3\2\2\2\u0186\u017c\3\2\2\2\u0186\u0182\3")
        buf.write("\2\2\2\u0187R\3\2\2\2\u0188\u018c\7$\2\2\u0189\u018b\n")
        buf.write("\2\2\2\u018a\u0189\3\2\2\2\u018b\u018e\3\2\2\2\u018c\u018a")
        buf.write("\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018f\3\2\2\2\u018e")
        buf.write("\u018c\3\2\2\2\u018f\u0190\7$\2\2\u0190T\3\2\2\2\u0191")
        buf.write("\u0192\t\3\2\2\u0192V\3\2\2\2\u0193\u0195\5U+\2\u0194")
        buf.write("\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0194\3\2\2\2")
        buf.write("\u0196\u0197\3\2\2\2\u0197X\3\2\2\2\u0198\u019a\5U+\2")
        buf.write("\u0199\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u0199\3")
        buf.write("\2\2\2\u019b\u019c\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u01a1")
        buf.write("\7\60\2\2\u019e\u01a0\5U+\2\u019f\u019e\3\2\2\2\u01a0")
        buf.write("\u01a3\3\2\2\2\u01a1\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2")
        buf.write("\u01a2\u01ab\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a4\u01a6\7")
        buf.write("\60\2\2\u01a5\u01a7\5U+\2\u01a6\u01a5\3\2\2\2\u01a7\u01a8")
        buf.write("\3\2\2\2\u01a8\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9")
        buf.write("\u01ab\3\2\2\2\u01aa\u0199\3\2\2\2\u01aa\u01a4\3\2\2\2")
        buf.write("\u01abZ\3\2\2\2\u01ac\u01af\5W,\2\u01ad\u01af\5Y-\2\u01ae")
        buf.write("\u01ac\3\2\2\2\u01ae\u01ad\3\2\2\2\u01af\\\3\2\2\2\u01b0")
        buf.write("\u01b1\7v\2\2\u01b1\u01b2\7t\2\2\u01b2\u01b3\7w\2\2\u01b3")
        buf.write("\u01ba\7g\2\2\u01b4\u01b5\7h\2\2\u01b5\u01b6\7c\2\2\u01b6")
        buf.write("\u01b7\7n\2\2\u01b7\u01b8\7u\2\2\u01b8\u01ba\7g\2\2\u01b9")
        buf.write("\u01b0\3\2\2\2\u01b9\u01b4\3\2\2\2\u01ba^\3\2\2\2\u01bb")
        buf.write("\u01bf\t\4\2\2\u01bc\u01be\t\5\2\2\u01bd\u01bc\3\2\2\2")
        buf.write("\u01be\u01c1\3\2\2\2\u01bf\u01bd\3\2\2\2\u01bf\u01c0\3")
        buf.write("\2\2\2\u01c0`\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c2\u01c3")
        buf.write("\7\61\2\2\u01c3\u01c4\7,\2\2\u01c4\u01c8\3\2\2\2\u01c5")
        buf.write("\u01c7\13\2\2\2\u01c6\u01c5\3\2\2\2\u01c7\u01ca\3\2\2")
        buf.write("\2\u01c8\u01c9\3\2\2\2\u01c8\u01c6\3\2\2\2\u01c9\u01cb")
        buf.write("\3\2\2\2\u01ca\u01c8\3\2\2\2\u01cb\u01cc\7,\2\2\u01cc")
        buf.write("\u01cd\7\61\2\2\u01cd\u01ce\3\2\2\2\u01ce\u01cf\b\61\2")
        buf.write("\2\u01cfb\3\2\2\2\u01d0\u01d4\7%\2\2\u01d1\u01d3\n\6\2")
        buf.write("\2\u01d2\u01d1\3\2\2\2\u01d3\u01d6\3\2\2\2\u01d4\u01d2")
        buf.write("\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d7\3\2\2\2\u01d6")
        buf.write("\u01d4\3\2\2\2\u01d7\u01d8\b\62\2\2\u01d8d\3\2\2\2\u01d9")
        buf.write("\u01db\7\17\2\2\u01da\u01d9\3\2\2\2\u01da\u01db\3\2\2")
        buf.write("\2\u01db\u01dc\3\2\2\2\u01dc\u01df\7\f\2\2\u01dd\u01df")
        buf.write("\7\17\2\2\u01de\u01da\3\2\2\2\u01de\u01dd\3\2\2\2\u01df")
        buf.write("f\3\2\2\2\u01e0\u01e2\t\7\2\2\u01e1\u01e0\3\2\2\2\u01e2")
        buf.write("\u01e3\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e3\u01e4\3\2\2\2")
        buf.write("\u01e4\u01e5\3\2\2\2\u01e5\u01e6\b\64\2\2\u01e6h\3\2\2")
        buf.write("\2\23\2\u0168\u0186\u018c\u0196\u019b\u01a1\u01a8\u01aa")
        buf.write("\u01ae\u01b9\u01bf\u01c8\u01d4\u01da\u01de\u01e3\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class DoflirLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    FILTER = 39
    TYPE_NAME = 40
    STRING_LITERAL = 41
    INTEGER = 42
    FLOAT = 43
    NUMBER = 44
    BOOL = 45
    ID = 46
    BLOCK_COMMENT = 47
    LINE_COMMENT = 48
    NL = 49
    WHITESPACE = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'define main'", "'{'", "'}'", "'='", "';'", "'->'", "'define'", 
            "'('", "')'", "','", "'return'", "'['", "']'", "'^'", "'-'", 
            "'+'", "'not'", "'@'", "'..'", "'*'", "'/'", "'//'", "'>'", 
            "'>='", "'<'", "'<='", "'=='", "'!='", "'and'", "'or'", "'if'", 
            "'else'", "'while'", "'read_table'", "'read_array'", "'read_console'", 
            "'print'", "'println'" ]

    symbolicNames = [ "<INVALID>",
            "FILTER", "TYPE_NAME", "STRING_LITERAL", "INTEGER", "FLOAT", 
            "NUMBER", "BOOL", "ID", "BLOCK_COMMENT", "LINE_COMMENT", "NL", 
            "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "FILTER", "TYPE_NAME", "STRING_LITERAL", "DIGIT", "INTEGER", 
                  "FLOAT", "NUMBER", "BOOL", "ID", "BLOCK_COMMENT", "LINE_COMMENT", 
                  "NL", "WHITESPACE" ]

    grammarFileName = "Doflir.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


