# Generated from Doflir.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u015b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#")
        buf.write("\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\5&\u00f5\n&\3\'\3\'\7\'\u00f9\n\'\f\'\16")
        buf.write("\'\u00fc\13\'\3(\3(\7(\u0100\n(\f(\16(\u0103\13(\3(\3")
        buf.write("(\3)\3)\3*\5*\u010a\n*\3*\6*\u010d\n*\r*\16*\u010e\3+")
        buf.write("\5+\u0112\n+\3+\6+\u0115\n+\r+\16+\u0116\3+\3+\7+\u011b")
        buf.write("\n+\f+\16+\u011e\13+\3+\3+\6+\u0122\n+\r+\16+\u0123\5")
        buf.write("+\u0126\n+\3,\3,\5,\u012a\n,\3-\3-\3-\3-\3-\3-\3-\3-\3")
        buf.write("-\5-\u0135\n-\3.\3.\3.\3.\7.\u013b\n.\f.\16.\u013e\13")
        buf.write(".\3.\3.\3.\3.\3.\3/\3/\7/\u0147\n/\f/\16/\u014a\13/\3")
        buf.write("/\3/\3\60\5\60\u014f\n\60\3\60\3\60\5\60\u0153\n\60\3")
        buf.write("\61\6\61\u0156\n\61\r\61\16\61\u0157\3\61\3\61\3\u013c")
        buf.write("\2\62\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q\2S*U+W,Y-[.]/_\60a\61\3\2\b\4\2C\\c|\6\2\62;C\\")
        buf.write("aac|\6\2\f\f\17\17$$^^\3\2\62;\4\2\f\f\17\17\5\2\13\f")
        buf.write("\16\17\"\"\2\u016e\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2")
        buf.write("\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2S")
        buf.write("\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2")
        buf.write("]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2\2\5o\3\2\2\2")
        buf.write("\7q\3\2\2\2\ts\3\2\2\2\13u\3\2\2\2\rw\3\2\2\2\17z\3\2")
        buf.write("\2\2\21|\3\2\2\2\23~\3\2\2\2\25\u0080\3\2\2\2\27\u0082")
        buf.write("\3\2\2\2\31\u0084\3\2\2\2\33\u008b\3\2\2\2\35\u008d\3")
        buf.write("\2\2\2\37\u008f\3\2\2\2!\u0091\3\2\2\2#\u0095\3\2\2\2")
        buf.write("%\u0097\3\2\2\2\'\u009a\3\2\2\2)\u009c\3\2\2\2+\u009e")
        buf.write("\3\2\2\2-\u00a1\3\2\2\2/\u00a3\3\2\2\2\61\u00a6\3\2\2")
        buf.write("\2\63\u00a8\3\2\2\2\65\u00ab\3\2\2\2\67\u00ae\3\2\2\2")
        buf.write("9\u00b1\3\2\2\2;\u00b5\3\2\2\2=\u00b8\3\2\2\2?\u00bc\3")
        buf.write("\2\2\2A\u00c3\3\2\2\2C\u00c6\3\2\2\2E\u00cb\3\2\2\2G\u00cf")
        buf.write("\3\2\2\2I\u00d2\3\2\2\2K\u00f4\3\2\2\2M\u00f6\3\2\2\2")
        buf.write("O\u00fd\3\2\2\2Q\u0106\3\2\2\2S\u0109\3\2\2\2U\u0111\3")
        buf.write("\2\2\2W\u0129\3\2\2\2Y\u0134\3\2\2\2[\u0136\3\2\2\2]\u0144")
        buf.write("\3\2\2\2_\u0152\3\2\2\2a\u0155\3\2\2\2cd\7f\2\2de\7g\2")
        buf.write("\2ef\7h\2\2fg\7k\2\2gh\7p\2\2hi\7g\2\2ij\7\"\2\2jk\7o")
        buf.write("\2\2kl\7c\2\2lm\7k\2\2mn\7p\2\2n\4\3\2\2\2op\7}\2\2p\6")
        buf.write("\3\2\2\2qr\7\177\2\2r\b\3\2\2\2st\7?\2\2t\n\3\2\2\2uv")
        buf.write("\7=\2\2v\f\3\2\2\2wx\7/\2\2xy\7@\2\2y\16\3\2\2\2z{\7.")
        buf.write("\2\2{\20\3\2\2\2|}\7]\2\2}\22\3\2\2\2~\177\7_\2\2\177")
        buf.write("\24\3\2\2\2\u0080\u0081\7*\2\2\u0081\26\3\2\2\2\u0082")
        buf.write("\u0083\7+\2\2\u0083\30\3\2\2\2\u0084\u0085\7f\2\2\u0085")
        buf.write("\u0086\7g\2\2\u0086\u0087\7h\2\2\u0087\u0088\7k\2\2\u0088")
        buf.write("\u0089\7p\2\2\u0089\u008a\7g\2\2\u008a\32\3\2\2\2\u008b")
        buf.write("\u008c\7`\2\2\u008c\34\3\2\2\2\u008d\u008e\7/\2\2\u008e")
        buf.write("\36\3\2\2\2\u008f\u0090\7-\2\2\u0090 \3\2\2\2\u0091\u0092")
        buf.write("\7p\2\2\u0092\u0093\7q\2\2\u0093\u0094\7v\2\2\u0094\"")
        buf.write("\3\2\2\2\u0095\u0096\7B\2\2\u0096$\3\2\2\2\u0097\u0098")
        buf.write("\7\60\2\2\u0098\u0099\7\60\2\2\u0099&\3\2\2\2\u009a\u009b")
        buf.write("\7,\2\2\u009b(\3\2\2\2\u009c\u009d\7\61\2\2\u009d*\3\2")
        buf.write("\2\2\u009e\u009f\7\61\2\2\u009f\u00a0\7\61\2\2\u00a0,")
        buf.write("\3\2\2\2\u00a1\u00a2\7@\2\2\u00a2.\3\2\2\2\u00a3\u00a4")
        buf.write("\7@\2\2\u00a4\u00a5\7?\2\2\u00a5\60\3\2\2\2\u00a6\u00a7")
        buf.write("\7>\2\2\u00a7\62\3\2\2\2\u00a8\u00a9\7>\2\2\u00a9\u00aa")
        buf.write("\7?\2\2\u00aa\64\3\2\2\2\u00ab\u00ac\7?\2\2\u00ac\u00ad")
        buf.write("\7?\2\2\u00ad\66\3\2\2\2\u00ae\u00af\7#\2\2\u00af\u00b0")
        buf.write("\7?\2\2\u00b08\3\2\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3")
        buf.write("\7p\2\2\u00b3\u00b4\7f\2\2\u00b4:\3\2\2\2\u00b5\u00b6")
        buf.write("\7q\2\2\u00b6\u00b7\7t\2\2\u00b7<\3\2\2\2\u00b8\u00b9")
        buf.write("\7P\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7P\2\2\u00bb>\3")
        buf.write("\2\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7g\2\2\u00be\u00bf")
        buf.write("\7v\2\2\u00bf\u00c0\7w\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2")
        buf.write("\7p\2\2\u00c2@\3\2\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5")
        buf.write("\7h\2\2\u00c5B\3\2\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8")
        buf.write("\7n\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca\7g\2\2\u00caD\3")
        buf.write("\2\2\2\u00cb\u00cc\7h\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce")
        buf.write("\7t\2\2\u00ceF\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1")
        buf.write("\7p\2\2\u00d1H\3\2\2\2\u00d2\u00d3\7y\2\2\u00d3\u00d4")
        buf.write("\7j\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7n\2\2\u00d6\u00d7")
        buf.write("\7g\2\2\u00d7J\3\2\2\2\u00d8\u00d9\7k\2\2\u00d9\u00da")
        buf.write("\7p\2\2\u00da\u00f5\7v\2\2\u00db\u00dc\7h\2\2\u00dc\u00dd")
        buf.write("\7n\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7c\2\2\u00df\u00f5")
        buf.write("\7v\2\2\u00e0\u00e1\7d\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3")
        buf.write("\7q\2\2\u00e3\u00f5\7n\2\2\u00e4\u00e5\7u\2\2\u00e5\u00e6")
        buf.write("\7v\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7k\2\2\u00e8\u00e9")
        buf.write("\7p\2\2\u00e9\u00f5\7i\2\2\u00ea\u00eb\7x\2\2\u00eb\u00ec")
        buf.write("\7g\2\2\u00ec\u00ed\7e\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef")
        buf.write("\7q\2\2\u00ef\u00f5\7t\2\2\u00f0\u00f1\7x\2\2\u00f1\u00f2")
        buf.write("\7q\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f5\7f\2\2\u00f4\u00d8")
        buf.write("\3\2\2\2\u00f4\u00db\3\2\2\2\u00f4\u00e0\3\2\2\2\u00f4")
        buf.write("\u00e4\3\2\2\2\u00f4\u00ea\3\2\2\2\u00f4\u00f0\3\2\2\2")
        buf.write("\u00f5L\3\2\2\2\u00f6\u00fa\t\2\2\2\u00f7\u00f9\t\3\2")
        buf.write("\2\u00f8\u00f7\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8")
        buf.write("\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fbN\3\2\2\2\u00fc\u00fa")
        buf.write("\3\2\2\2\u00fd\u0101\7$\2\2\u00fe\u0100\n\4\2\2\u00ff")
        buf.write("\u00fe\3\2\2\2\u0100\u0103\3\2\2\2\u0101\u00ff\3\2\2\2")
        buf.write("\u0101\u0102\3\2\2\2\u0102\u0104\3\2\2\2\u0103\u0101\3")
        buf.write("\2\2\2\u0104\u0105\7$\2\2\u0105P\3\2\2\2\u0106\u0107\t")
        buf.write("\5\2\2\u0107R\3\2\2\2\u0108\u010a\7/\2\2\u0109\u0108\3")
        buf.write("\2\2\2\u0109\u010a\3\2\2\2\u010a\u010c\3\2\2\2\u010b\u010d")
        buf.write("\5Q)\2\u010c\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010c")
        buf.write("\3\2\2\2\u010e\u010f\3\2\2\2\u010fT\3\2\2\2\u0110\u0112")
        buf.write("\7/\2\2\u0111\u0110\3\2\2\2\u0111\u0112\3\2\2\2\u0112")
        buf.write("\u0125\3\2\2\2\u0113\u0115\5Q)\2\u0114\u0113\3\2\2\2\u0115")
        buf.write("\u0116\3\2\2\2\u0116\u0114\3\2\2\2\u0116\u0117\3\2\2\2")
        buf.write("\u0117\u0118\3\2\2\2\u0118\u011c\7\60\2\2\u0119\u011b")
        buf.write("\5Q)\2\u011a\u0119\3\2\2\2\u011b\u011e\3\2\2\2\u011c\u011a")
        buf.write("\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u0126\3\2\2\2\u011e")
        buf.write("\u011c\3\2\2\2\u011f\u0121\7\60\2\2\u0120\u0122\5Q)\2")
        buf.write("\u0121\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0121\3")
        buf.write("\2\2\2\u0123\u0124\3\2\2\2\u0124\u0126\3\2\2\2\u0125\u0114")
        buf.write("\3\2\2\2\u0125\u011f\3\2\2\2\u0126V\3\2\2\2\u0127\u012a")
        buf.write("\5S*\2\u0128\u012a\5U+\2\u0129\u0127\3\2\2\2\u0129\u0128")
        buf.write("\3\2\2\2\u012aX\3\2\2\2\u012b\u012c\7v\2\2\u012c\u012d")
        buf.write("\7t\2\2\u012d\u012e\7w\2\2\u012e\u0135\7g\2\2\u012f\u0130")
        buf.write("\7h\2\2\u0130\u0131\7c\2\2\u0131\u0132\7n\2\2\u0132\u0133")
        buf.write("\7u\2\2\u0133\u0135\7g\2\2\u0134\u012b\3\2\2\2\u0134\u012f")
        buf.write("\3\2\2\2\u0135Z\3\2\2\2\u0136\u0137\7\61\2\2\u0137\u0138")
        buf.write("\7,\2\2\u0138\u013c\3\2\2\2\u0139\u013b\13\2\2\2\u013a")
        buf.write("\u0139\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013d\3\2\2\2")
        buf.write("\u013c\u013a\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u013c\3")
        buf.write("\2\2\2\u013f\u0140\7,\2\2\u0140\u0141\7\61\2\2\u0141\u0142")
        buf.write("\3\2\2\2\u0142\u0143\b.\2\2\u0143\\\3\2\2\2\u0144\u0148")
        buf.write("\7%\2\2\u0145\u0147\n\6\2\2\u0146\u0145\3\2\2\2\u0147")
        buf.write("\u014a\3\2\2\2\u0148\u0146\3\2\2\2\u0148\u0149\3\2\2\2")
        buf.write("\u0149\u014b\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u014c\b")
        buf.write("/\2\2\u014c^\3\2\2\2\u014d\u014f\7\17\2\2\u014e\u014d")
        buf.write("\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2\2\2\u0150")
        buf.write("\u0153\7\f\2\2\u0151\u0153\7\17\2\2\u0152\u014e\3\2\2")
        buf.write("\2\u0152\u0151\3\2\2\2\u0153`\3\2\2\2\u0154\u0156\t\7")
        buf.write("\2\2\u0155\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155")
        buf.write("\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u0159\3\2\2\2\u0159")
        buf.write("\u015a\b\61\2\2\u015ab\3\2\2\2\24\2\u00f4\u00fa\u0101")
        buf.write("\u0109\u010e\u0111\u0116\u011c\u0123\u0125\u0129\u0134")
        buf.write("\u013c\u0148\u014e\u0152\u0157\3\b\2\2")
        return buf.getvalue()


class DoflirLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    TYPE_NAME = 37
    ID = 38
    STRING_LITERAL = 39
    INTEGER = 40
    FLOAT = 41
    NUMBER = 42
    BOOL = 43
    BLOCK_COMMENT = 44
    LINE_COMMENT = 45
    NL = 46
    WHITESPACE = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'define main'", "'{'", "'}'", "'='", "';'", "'->'", "','", 
            "'['", "']'", "'('", "')'", "'define'", "'^'", "'-'", "'+'", 
            "'not'", "'@'", "'..'", "'*'", "'/'", "'//'", "'>'", "'>='", 
            "'<'", "'<='", "'=='", "'!='", "'and'", "'or'", "'NaN'", "'return'", 
            "'if'", "'else'", "'for'", "'in'", "'while'" ]

    symbolicNames = [ "<INVALID>",
            "TYPE_NAME", "ID", "STRING_LITERAL", "INTEGER", "FLOAT", "NUMBER", 
            "BOOL", "BLOCK_COMMENT", "LINE_COMMENT", "NL", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "TYPE_NAME", "ID", 
                  "STRING_LITERAL", "DIGIT", "INTEGER", "FLOAT", "NUMBER", 
                  "BOOL", "BLOCK_COMMENT", "LINE_COMMENT", "NL", "WHITESPACE" ]

    grammarFileName = "Doflir.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


