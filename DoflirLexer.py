# Generated from Doflir.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62")
        buf.write("\u015d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3")
        buf.write("\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3")
        buf.write("&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3\'\5\'\u00fd\n\'\3(\3(\7(\u0101\n(\f")
        buf.write("(\16(\u0104\13(\3)\3)\7)\u0108\n)\f)\16)\u010b\13)\3)")
        buf.write("\3)\3*\3*\3+\6+\u0112\n+\r+\16+\u0113\3,\6,\u0117\n,\r")
        buf.write(",\16,\u0118\3,\3,\7,\u011d\n,\f,\16,\u0120\13,\3,\3,\6")
        buf.write(",\u0124\n,\r,\16,\u0125\5,\u0128\n,\3-\3-\5-\u012c\n-")
        buf.write("\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u0137\n.\3/\3/\3/\3/\7")
        buf.write("/\u013d\n/\f/\16/\u0140\13/\3/\3/\3/\3/\3/\3\60\3\60\7")
        buf.write("\60\u0149\n\60\f\60\16\60\u014c\13\60\3\60\3\60\3\61\5")
        buf.write("\61\u0151\n\61\3\61\3\61\5\61\u0155\n\61\3\62\6\62\u0158")
        buf.write("\n\62\r\62\16\62\u0159\3\62\3\62\3\u013e\2\63\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S\2U+W")
        buf.write(",Y-[.]/_\60a\61c\62\3\2\b\4\2C\\c|\6\2\62;C\\aac|\6\2")
        buf.write("\f\f\17\17$$^^\3\2\62;\4\2\f\f\17\17\5\2\13\f\16\17\"")
        buf.write("\"\2\u016e\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3")
        buf.write("\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3\2\2\2\5q")
        buf.write("\3\2\2\2\7s\3\2\2\2\tu\3\2\2\2\13w\3\2\2\2\ry\3\2\2\2")
        buf.write("\17|\3\2\2\2\21\u0083\3\2\2\2\23\u0085\3\2\2\2\25\u0087")
        buf.write("\3\2\2\2\27\u0089\3\2\2\2\31\u0090\3\2\2\2\33\u0092\3")
        buf.write("\2\2\2\35\u0094\3\2\2\2\37\u0096\3\2\2\2!\u0098\3\2\2")
        buf.write("\2#\u009a\3\2\2\2%\u009e\3\2\2\2\'\u00a0\3\2\2\2)\u00a3")
        buf.write("\3\2\2\2+\u00a5\3\2\2\2-\u00a7\3\2\2\2/\u00aa\3\2\2\2")
        buf.write("\61\u00ac\3\2\2\2\63\u00af\3\2\2\2\65\u00b1\3\2\2\2\67")
        buf.write("\u00b4\3\2\2\29\u00b7\3\2\2\2;\u00ba\3\2\2\2=\u00be\3")
        buf.write("\2\2\2?\u00c1\3\2\2\2A\u00c5\3\2\2\2C\u00c8\3\2\2\2E\u00cd")
        buf.write("\3\2\2\2G\u00d1\3\2\2\2I\u00d4\3\2\2\2K\u00da\3\2\2\2")
        buf.write("M\u00fc\3\2\2\2O\u00fe\3\2\2\2Q\u0105\3\2\2\2S\u010e\3")
        buf.write("\2\2\2U\u0111\3\2\2\2W\u0127\3\2\2\2Y\u012b\3\2\2\2[\u0136")
        buf.write("\3\2\2\2]\u0138\3\2\2\2_\u0146\3\2\2\2a\u0154\3\2\2\2")
        buf.write("c\u0157\3\2\2\2ef\7f\2\2fg\7g\2\2gh\7h\2\2hi\7k\2\2ij")
        buf.write("\7p\2\2jk\7g\2\2kl\7\"\2\2lm\7o\2\2mn\7c\2\2no\7k\2\2")
        buf.write("op\7p\2\2p\4\3\2\2\2qr\7}\2\2r\6\3\2\2\2st\7\177\2\2t")
        buf.write("\b\3\2\2\2uv\7?\2\2v\n\3\2\2\2wx\7=\2\2x\f\3\2\2\2yz\7")
        buf.write("/\2\2z{\7@\2\2{\16\3\2\2\2|}\7f\2\2}~\7g\2\2~\177\7h\2")
        buf.write("\2\177\u0080\7k\2\2\u0080\u0081\7p\2\2\u0081\u0082\7g")
        buf.write("\2\2\u0082\20\3\2\2\2\u0083\u0084\7*\2\2\u0084\22\3\2")
        buf.write("\2\2\u0085\u0086\7+\2\2\u0086\24\3\2\2\2\u0087\u0088\7")
        buf.write(".\2\2\u0088\26\3\2\2\2\u0089\u008a\7t\2\2\u008a\u008b")
        buf.write("\7g\2\2\u008b\u008c\7v\2\2\u008c\u008d\7w\2\2\u008d\u008e")
        buf.write("\7t\2\2\u008e\u008f\7p\2\2\u008f\30\3\2\2\2\u0090\u0091")
        buf.write("\7]\2\2\u0091\32\3\2\2\2\u0092\u0093\7_\2\2\u0093\34\3")
        buf.write("\2\2\2\u0094\u0095\7`\2\2\u0095\36\3\2\2\2\u0096\u0097")
        buf.write("\7/\2\2\u0097 \3\2\2\2\u0098\u0099\7-\2\2\u0099\"\3\2")
        buf.write("\2\2\u009a\u009b\7p\2\2\u009b\u009c\7q\2\2\u009c\u009d")
        buf.write("\7v\2\2\u009d$\3\2\2\2\u009e\u009f\7B\2\2\u009f&\3\2\2")
        buf.write("\2\u00a0\u00a1\7\60\2\2\u00a1\u00a2\7\60\2\2\u00a2(\3")
        buf.write("\2\2\2\u00a3\u00a4\7,\2\2\u00a4*\3\2\2\2\u00a5\u00a6\7")
        buf.write("\61\2\2\u00a6,\3\2\2\2\u00a7\u00a8\7\61\2\2\u00a8\u00a9")
        buf.write("\7\61\2\2\u00a9.\3\2\2\2\u00aa\u00ab\7@\2\2\u00ab\60\3")
        buf.write("\2\2\2\u00ac\u00ad\7@\2\2\u00ad\u00ae\7?\2\2\u00ae\62")
        buf.write("\3\2\2\2\u00af\u00b0\7>\2\2\u00b0\64\3\2\2\2\u00b1\u00b2")
        buf.write("\7>\2\2\u00b2\u00b3\7?\2\2\u00b3\66\3\2\2\2\u00b4\u00b5")
        buf.write("\7?\2\2\u00b5\u00b6\7?\2\2\u00b68\3\2\2\2\u00b7\u00b8")
        buf.write("\7#\2\2\u00b8\u00b9\7?\2\2\u00b9:\3\2\2\2\u00ba\u00bb")
        buf.write("\7c\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7f\2\2\u00bd<\3")
        buf.write("\2\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7t\2\2\u00c0>\3")
        buf.write("\2\2\2\u00c1\u00c2\7P\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4")
        buf.write("\7P\2\2\u00c4@\3\2\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7")
        buf.write("\7h\2\2\u00c7B\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca")
        buf.write("\7n\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7g\2\2\u00ccD\3")
        buf.write("\2\2\2\u00cd\u00ce\7h\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0")
        buf.write("\7t\2\2\u00d0F\3\2\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3")
        buf.write("\7p\2\2\u00d3H\3\2\2\2\u00d4\u00d5\7y\2\2\u00d5\u00d6")
        buf.write("\7j\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7n\2\2\u00d8\u00d9")
        buf.write("\7g\2\2\u00d9J\3\2\2\2\u00da\u00db\7r\2\2\u00db\u00dc")
        buf.write("\7t\2\2\u00dc\u00dd\7k\2\2\u00dd\u00de\7p\2\2\u00de\u00df")
        buf.write("\7v\2\2\u00dfL\3\2\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2")
        buf.write("\7p\2\2\u00e2\u00fd\7v\2\2\u00e3\u00e4\7h\2\2\u00e4\u00e5")
        buf.write("\7n\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7c\2\2\u00e7\u00fd")
        buf.write("\7v\2\2\u00e8\u00e9\7d\2\2\u00e9\u00ea\7q\2\2\u00ea\u00eb")
        buf.write("\7q\2\2\u00eb\u00fd\7n\2\2\u00ec\u00ed\7u\2\2\u00ed\u00ee")
        buf.write("\7v\2\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1")
        buf.write("\7p\2\2\u00f1\u00fd\7i\2\2\u00f2\u00f3\7x\2\2\u00f3\u00f4")
        buf.write("\7g\2\2\u00f4\u00f5\7e\2\2\u00f5\u00f6\7v\2\2\u00f6\u00f7")
        buf.write("\7q\2\2\u00f7\u00fd\7t\2\2\u00f8\u00f9\7x\2\2\u00f9\u00fa")
        buf.write("\7q\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fd\7f\2\2\u00fc\u00e0")
        buf.write("\3\2\2\2\u00fc\u00e3\3\2\2\2\u00fc\u00e8\3\2\2\2\u00fc")
        buf.write("\u00ec\3\2\2\2\u00fc\u00f2\3\2\2\2\u00fc\u00f8\3\2\2\2")
        buf.write("\u00fdN\3\2\2\2\u00fe\u0102\t\2\2\2\u00ff\u0101\t\3\2")
        buf.write("\2\u0100\u00ff\3\2\2\2\u0101\u0104\3\2\2\2\u0102\u0100")
        buf.write("\3\2\2\2\u0102\u0103\3\2\2\2\u0103P\3\2\2\2\u0104\u0102")
        buf.write("\3\2\2\2\u0105\u0109\7$\2\2\u0106\u0108\n\4\2\2\u0107")
        buf.write("\u0106\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3\2\2\2")
        buf.write("\u0109\u010a\3\2\2\2\u010a\u010c\3\2\2\2\u010b\u0109\3")
        buf.write("\2\2\2\u010c\u010d\7$\2\2\u010dR\3\2\2\2\u010e\u010f\t")
        buf.write("\5\2\2\u010fT\3\2\2\2\u0110\u0112\5S*\2\u0111\u0110\3")
        buf.write("\2\2\2\u0112\u0113\3\2\2\2\u0113\u0111\3\2\2\2\u0113\u0114")
        buf.write("\3\2\2\2\u0114V\3\2\2\2\u0115\u0117\5S*\2\u0116\u0115")
        buf.write("\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u0116\3\2\2\2\u0118")
        buf.write("\u0119\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u011e\7\60\2")
        buf.write("\2\u011b\u011d\5S*\2\u011c\u011b\3\2\2\2\u011d\u0120\3")
        buf.write("\2\2\2\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0128")
        buf.write("\3\2\2\2\u0120\u011e\3\2\2\2\u0121\u0123\7\60\2\2\u0122")
        buf.write("\u0124\5S*\2\u0123\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125")
        buf.write("\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0128\3\2\2\2")
        buf.write("\u0127\u0116\3\2\2\2\u0127\u0121\3\2\2\2\u0128X\3\2\2")
        buf.write("\2\u0129\u012c\5U+\2\u012a\u012c\5W,\2\u012b\u0129\3\2")
        buf.write("\2\2\u012b\u012a\3\2\2\2\u012cZ\3\2\2\2\u012d\u012e\7")
        buf.write("v\2\2\u012e\u012f\7t\2\2\u012f\u0130\7w\2\2\u0130\u0137")
        buf.write("\7g\2\2\u0131\u0132\7h\2\2\u0132\u0133\7c\2\2\u0133\u0134")
        buf.write("\7n\2\2\u0134\u0135\7u\2\2\u0135\u0137\7g\2\2\u0136\u012d")
        buf.write("\3\2\2\2\u0136\u0131\3\2\2\2\u0137\\\3\2\2\2\u0138\u0139")
        buf.write("\7\61\2\2\u0139\u013a\7,\2\2\u013a\u013e\3\2\2\2\u013b")
        buf.write("\u013d\13\2\2\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2")
        buf.write("\2\u013e\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0141")
        buf.write("\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0142\7,\2\2\u0142")
        buf.write("\u0143\7\61\2\2\u0143\u0144\3\2\2\2\u0144\u0145\b/\2\2")
        buf.write("\u0145^\3\2\2\2\u0146\u014a\7%\2\2\u0147\u0149\n\6\2\2")
        buf.write("\u0148\u0147\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148\3")
        buf.write("\2\2\2\u014a\u014b\3\2\2\2\u014b\u014d\3\2\2\2\u014c\u014a")
        buf.write("\3\2\2\2\u014d\u014e\b\60\2\2\u014e`\3\2\2\2\u014f\u0151")
        buf.write("\7\17\2\2\u0150\u014f\3\2\2\2\u0150\u0151\3\2\2\2\u0151")
        buf.write("\u0152\3\2\2\2\u0152\u0155\7\f\2\2\u0153\u0155\7\17\2")
        buf.write("\2\u0154\u0150\3\2\2\2\u0154\u0153\3\2\2\2\u0155b\3\2")
        buf.write("\2\2\u0156\u0158\t\7\2\2\u0157\u0156\3\2\2\2\u0158\u0159")
        buf.write("\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a")
        buf.write("\u015b\3\2\2\2\u015b\u015c\b\62\2\2\u015cd\3\2\2\2\22")
        buf.write("\2\u00fc\u0102\u0109\u0113\u0118\u011e\u0125\u0127\u012b")
        buf.write("\u0136\u013e\u014a\u0150\u0154\u0159\3\b\2\2")
        return buf.getvalue()


class DoflirLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    TYPE_NAME = 38
    ID = 39
    STRING_LITERAL = 40
    INTEGER = 41
    FLOAT = 42
    NUMBER = 43
    BOOL = 44
    BLOCK_COMMENT = 45
    LINE_COMMENT = 46
    NL = 47
    WHITESPACE = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'define main'", "'{'", "'}'", "'='", "';'", "'->'", "'define'", 
            "'('", "')'", "','", "'return'", "'['", "']'", "'^'", "'-'", 
            "'+'", "'not'", "'@'", "'..'", "'*'", "'/'", "'//'", "'>'", 
            "'>='", "'<'", "'<='", "'=='", "'!='", "'and'", "'or'", "'NaN'", 
            "'if'", "'else'", "'for'", "'in'", "'while'", "'print'" ]

    symbolicNames = [ "<INVALID>",
            "TYPE_NAME", "ID", "STRING_LITERAL", "INTEGER", "FLOAT", "NUMBER", 
            "BOOL", "BLOCK_COMMENT", "LINE_COMMENT", "NL", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "TYPE_NAME", 
                  "ID", "STRING_LITERAL", "DIGIT", "INTEGER", "FLOAT", "NUMBER", 
                  "BOOL", "BLOCK_COMMENT", "LINE_COMMENT", "NL", "WHITESPACE" ]

    grammarFileName = "Doflir.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


